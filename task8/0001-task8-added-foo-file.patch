From 4ed4e373e139036598c873d1279cbaf8065c78fc Mon Sep 17 00:00:00 2001
From: Jonathan Bowie <eudjtb@gmail.com>
Date: Fri, 24 Mar 2017 01:56:12 -0700
Subject: [PATCH] task8: added foo file

task8: added foo file
Signed-off-by: <eudjtb@gmail.com>
---
 task8/debugfs.h     |  2 ++
 task8/mod_debugfs.c | 45 +++++++++++++++++++++++++++++++++++++++------
 task8/proof0        | 12 ------------
 3 files changed, 41 insertions(+), 18 deletions(-)
 delete mode 100644 task8/proof0

diff --git a/task8/debugfs.h b/task8/debugfs.h
index 9600e28..64ac6b7 100644
--- a/task8/debugfs.h
+++ b/task8/debugfs.h
@@ -6,6 +6,8 @@
 #define EUD_ID_LEN      14
 
 static char my_id[EUD_ID_LEN] = EUD_ID;
+static char foo_page[PAGE_SIZE];
+static rwlock_t lck;
 
 int make_endpoints(void);
 
diff --git a/task8/mod_debugfs.c b/task8/mod_debugfs.c
index 61237af..ac1e402 100644
--- a/task8/mod_debugfs.c
+++ b/task8/mod_debugfs.c
@@ -15,19 +15,38 @@ MODULE_DESCRIPTION("simple debugfs module");
 static struct dentry *dent;
 static unsigned short success;
 
-static ssize_t id_read(struct file *filp, char __user *buffer, size_t len,
+static ssize_t foo_read(struct file *filp, char __user *buffer, size_t len,
 	loff_t *offset)
 {
+	return simple_read_from_buffer(buffer, PAGE_SIZE, offset, &foo_page,
+					PAGE_SIZE);
+}
+
+static ssize_t foo_write(struct file *filp, const char __user *buffer,
+	size_t len, loff_t *offset)
+{
 	int ret;
 
-	ret = simple_read_from_buffer(buffer, EUD_ID_LEN, offset, &my_id,
-					EUD_ID_LEN);
-	if (ret < 0)
-		return -EINVAL;
+	if (len > PAGE_SIZE) {
+		pr_alert("mod_debugfs: overflow for 'foo' file size=%ld\n",
+			len);
+		return -EFAULT;
+	}
+
+	write_lock(&lck);
+	ret = simple_write_to_buffer(&foo_page, PAGE_SIZE, offset, buffer, len);
+	write_unlock(&lck);
 
 	return ret;
 }
 
+static ssize_t id_read(struct file *filp, char __user *buffer, size_t len,
+	loff_t *offset)
+{
+	return simple_read_from_buffer(buffer, EUD_ID_LEN, offset, &my_id,
+					EUD_ID_LEN);
+}
+
 static ssize_t id_write(struct file *filp, const char __user *buffer,
 	size_t len, loff_t *offset)
 {
@@ -62,6 +81,12 @@ static const struct file_operations id_fops = {
 	.write = id_write,
 };
 
+static const struct file_operations foo_fops = {
+	.owner = THIS_MODULE,
+	.read = foo_read,
+	.write = foo_write,
+};
+
 int make_endpoints(void)
 {
 	static struct dentry *tmp;
@@ -70,7 +95,11 @@ int make_endpoints(void)
 	if (!tmp)
 		return -EINVAL;
 
-	tmp = debugsfs_create_u32("jiffies", 0644, dent, (u32 *)&jiffies);
+	tmp = debugfs_create_u32("jiffies", 0644, dent, (u32 *)&jiffies);
+	if (!tmp)
+		return -EINVAL;
+
+	tmp = debugfs_create_file("foo", 0644, dent, NULL, &foo_fops);
 	if (!tmp)
 		return -EINVAL;
 
@@ -81,6 +110,9 @@ int init_module(void)
 {
 	static int ret;
 
+	memset(&foo_page, 0, PAGE_SIZE);
+	sprintf(foo_page, "Initializing foo_page...\n");
+
 	dent = debugfs_create_dir(DEBUGFS_DIR, NULL);
 	if (dent == ERR_PTR(-ENODEV)) {
 		pr_warn("Please configure kernel with CONFIG_DEBUGFS\n");
@@ -96,6 +128,7 @@ int init_module(void)
 	pr_notice("Created debugfs subdir %s\n", DEBUGFS_DIR);
 	success = 1;
 
+	rwlock_init(&lck);
 	ret = make_endpoints();
 
 	if (ret) {
diff --git a/task8/proof0 b/task8/proof0
deleted file mode 100644
index 791371c..0000000
--- a/task8/proof0
+++ /dev/null
@@ -1,12 +0,0 @@
-j@gnshost:~/Eudyptula/task8$ sudo insmod mod_debugfs.ko
-j@gnshost:~/Eudyptula/task8$ sudo tail -2 /var/log/syslog
-Mar 23 14:05:49 gnshost kernel: [ 3842.359063] I hate to see you leave, but...
-Mar 23 14:06:00 gnshost kernel: [ 3853.431204] Created debugfs subdir eudyptula
-j@gnshost:~/Eudyptula/task8$ sudo cat /sys/kernel/debug/eudyptula/id
-1be5456d23a8
-j@gnshost:~/Eudyptula/task8$ sudo sh -c 'echo "1be5456d23a8" > /sys/kernel/debug/eudyptula/id'
-j@gnshost:~/Eudyptula/task8$ sudo sh -c 'echo "bad_id" > /sys/kernel/debug/eudyptula/id'
-sh: echo: I/O error
-j@gnshost:~/Eudyptula/task8$ sudo tail -1 /var/log/syslog
-Mar 23 14:05:05 gnshost kernel: [ 3797.702940] debugfs/eudyptula/id got bad input: bad_id
-j@gnshost:~/Eudyptula/taskt8$ 
-- 
2.7.4

